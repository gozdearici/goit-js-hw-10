{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('[data-start]');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\nconst dateTimePickerElement = document.querySelector('#datetime-picker');\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n\n    const selectedDate = selectedDates[0];\n    const now = new Date();\n\n    if (!selectedDate || selectedDate < now) {\n      iziToast.show({\n        title: 'Attention',\n        message: 'Please choose a date in the future!',\n        position: 'topRight',\n        color: 'red',\n      });\n\n      startButton.disabled = true;\n      userSelectedDate = null;\n      return;\n    }\n\n    startButton.disabled = false;\n    userSelectedDate = selectedDate;\n    console.log('Selected Date (userSelectedDate):', userSelectedDate);\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nconst addLeadingZero = value => {\n  return String(value).padStart(2, '0');\n};\n\nconst convertMs = ms => {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n};\n\nconst updateTimerDisplay = ({ days, hours, minutes, seconds }) => {\n  daysElement.innerText = days;\n  hoursElement.innerText = hours;\n  minutesElement.innerText = minutes;\n  secondsElement.innerText = seconds;\n};\n\nconst startCountDown = () => {\n  startButton.disabled = true;\n  dateTimePickerElement.disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const now = new Date();\n    const timeDifference = userSelectedDate.getTime() - now.getTime();\n\n    if (timeDifference <= 0) {\n      clearInterval(countdownInterval);\n\n      updateTimerDisplay({\n        days: '00',\n        hours: '00',\n        minutes: '00',\n        seconds: '00',\n      });\n\n      iziToast.success({\n        title: 'Success',\n        message: 'Countdown finished!',\n        position: 'topRight',\n        color: 'green',\n      });\n\n      dateTimePickerElement.disabled = false;\n      return;\n    }\n\n    const time = convertMs(timeDifference);\n    updateTimerDisplay(time);\n  }, 1000); // Update every second\n};\n\nstartButton.addEventListener('click', startCountDown);\n"],"names":["startButton","daysElement","hoursElement","minutesElement","secondsElement","dateTimePickerElement","userSelectedDate","countdownInterval","options","selectedDates","selectedDate","iziToast","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimerDisplay","startCountDown","now","timeDifference","time"],"mappings":"+IAKA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAwB,SAAS,cAAc,kBAAkB,EACvE,IAAIC,EAAmB,KACnBC,EAAoB,KAExB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAE5B,MAAMC,EAAeD,EAAc,CAAC,EAGpC,GAAI,CAACC,GAAgBA,EAFT,IAAI,KAEyB,CACvCC,EAAS,KAAK,CACZ,MAAO,YACP,QAAS,sCACT,SAAU,WACV,MAAO,KACf,CAAO,EAEDX,EAAY,SAAW,GACvBM,EAAmB,KACnB,MACN,CAEIN,EAAY,SAAW,GACvBM,EAAmBI,EACnB,QAAQ,IAAI,oCAAqCJ,CAAgB,CAClE,CACH,EAEAM,EAAU,mBAAoBJ,CAAO,EAErC,MAAMK,EAAiBC,GACd,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAGhCC,EAAYC,GAAM,CAQtB,MAAMC,EAAOJ,EAAe,KAAK,MAAMG,EAAK,KAAG,CAAC,EAE1CE,EAAQL,EAAe,KAAK,MAAOG,EAAK,MAAO,IAAI,CAAC,EAEpDG,EAAUN,EAAe,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,CAAC,EAEjEI,EAAUP,EACd,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,CACnD,EAED,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C,EAEMC,EAAqB,CAAC,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,IAAO,CAChEnB,EAAY,UAAYgB,EACxBf,EAAa,UAAYgB,EACzBf,EAAe,UAAYgB,EAC3Bf,EAAe,UAAYgB,CAC7B,EAEME,EAAiB,IAAM,CAC3BtB,EAAY,SAAW,GACvBK,EAAsB,SAAW,GAEjCE,EAAoB,YAAY,IAAM,CACpC,MAAMgB,EAAM,IAAI,KACVC,EAAiBlB,EAAiB,QAAO,EAAKiB,EAAI,QAAS,EAEjE,GAAIC,GAAkB,EAAG,CACvB,cAAcjB,CAAiB,EAE/Bc,EAAmB,CACjB,KAAM,KACN,MAAO,KACP,QAAS,KACT,QAAS,IACjB,CAAO,EAEDV,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,sBACT,SAAU,WACV,MAAO,OACf,CAAO,EAEDN,EAAsB,SAAW,GACjC,MACN,CAEI,MAAMoB,EAAOV,EAAUS,CAAc,EACrCH,EAAmBI,CAAI,CACxB,EAAE,GAAI,CACT,EAEAzB,EAAY,iBAAiB,QAASsB,CAAc"}